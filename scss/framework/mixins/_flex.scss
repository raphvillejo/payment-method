// SCSS File
// flex.scss


// flex mixin
@mixin flex-display() {
	display: -webkit-flex;
	display: -webkit-box;
	display: flex;
}

@mixin flex-display-inline() {
	display: -webkit-inline-box;
	display: inline-flex;
}

@mixin orient($val-1: normal, $val-2: vertical) {
	-webkit-box-direction: $val-1;
	   -moz-box-direction: $val-1;
	   -webkit-box-orient: $val-2;
	      -moz-box-orient: $val-2;
}

@mixin flex-direction($value: row) {
    @if $value == row-reverse {
		@include orient(reverse, horizontal);
	}
	@else if $value == column {
		@include orient();
	}
	@else if $value == column-reverse {
		@include orient(reverse);
	}
	@else {
		@include orient($val-2: horizontal);
	}
	
	@include prefix(flex-direction, $value, webkit);
}

@mixin flex-basis($value: auto) {
	flex-basis: $value;
}

@mixin flex-grow($value: 0) {
     -webkit-box-flex: $value;
	@include prefix(flex-grow, $value, webkit);
}

@mixin flex-shrink($value: 0) {
	flex-shrink: $value;
}

@mixin flex-wrap($value: wrap) {
	@if $value == wrap {
		-ms-flex-wrap: wrap;
	}
	@else { 
		-ms-flex-wrap: $value; 
	}

	@include prefix(flex-wrap, $value, webkit);
}

@mixin flex($value: 0 0 auto) {
	flex: $value;
}

@mixin flex-order($val: 1) {
    -webkit-box-ordinal-group: $val + 1;
               -ms-flex-order: $val;
                        order: $val;
}

@mixin flex-align-content($value: center) {
	@if $value == flex-start {
	   -ms-flex-line-pack: start;
	}
	@else if $value == flex-end {
	   -ms-flex-line-pack: end;
	}
	@else {
	   -ms-flex-line-pack: $value;
	}
	
	@include prefix(align-content, $value, webkit);
}

@mixin flex-align-items($value: center) {
    @if $value == flex-start {
		-webkit-box-align: start;
		   -ms-flex-align: start;
	}
	@else if $value == flex-end {
		-webkit-box-align: end;
		   -ms-flex-align: end;
	}
	@else {
		-webkit-box-align: $value;
		   -ms-flex-align: $value;
	}
	
	@include prefix(align-items, $value, webkit);
}

// Values: auto | flex-start | flex-end | center | baseline | stretch
@mixin flex-align-self($value: auto) {
	@if $value == flex-start {
		-ms-flex-item-align: start;
	}
	@else if $value == flex-end {
		-ms-flex-item-align: end;
	}
	@else {
		-ms-flex-item-align: $value;
	}

	align-self: $value;
}

@mixin flex-justify-content($value: center) {
	@if $value == flex-start {
		-webkit-box-pack: start;
		   -ms-flex-pack: start;
	}
	@else if $value == flex-end {
		-webkit-box-pack: end;
		   -ms-flex-pack: end;
	}
	@else if $value == space-around {
		   -ms-flex-pack: distribute;
	}
	@else if $value == space-between {
		-webkit-box-pack: justify;
		   -ms-flex-pack: justify;	
	}
	@else {
        -webkit-box-pack: $value;
		   -ms-flex-pack: $value;
	}
	
	@include prefix(justify-content, $value, webkit);
}

// flow
@mixin flex-flow($values: (row nowrap)) {
	@include prefix(flex-flow, $values, webkit);
}
